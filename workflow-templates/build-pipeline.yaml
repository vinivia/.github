name: build-pipeline
on:
  push:
    paths-ignore:
      - 'deploy/**'
      - '.github/workflows/promotion-pipeline.yaml'

env:
  APPLICATION_ID: "" # TODO: update with your application ID
  AWS_REGION: "" #TODO: update with aws region of development environment       

jobs: 
  build:
    name: Build application
    runs-on: ubuntu-latest

    steps:
    - name: Code checkout
      uses: actions/checkout@v2
      with:
        persist-credentials: false

    - name: Configure node environment
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Install all dependencies
      run: npm install --force

    # Here we should also be running all integration tests pipeline
    - name: Build and pack application binaries
      run: npm run build

  deploy:
    name: Build and deploy container application  image
    runs-on: ubuntu-latest
    needs: [build]

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Sets env vars
      run: |
        # By default the ECR repository will be the same application ID.If you want to use other pattern 
        # you need to change the setup of ECR_REPOSITORY variable. 

        echo "ECR_REPOSITORY=$APPLICATION_ID" >> $GITHUB_ENV
        echo "IMAGE_NAME=$APPLICATION_ID" >> $GITHUB_ENV

    - name: Sets env vars for preview environments
      run: |
        echo "IMAGE_TAG_BASE_NAME=$IMAGE_NAME-dev" >> $GITHUB_ENV
        echo "OVERLAY_DIR=preview" >> $GITHUB_ENV
      if: ${{ github.ref_name != 'main' }}

    - name: Sets env vars for DEV environment
      run: |
        echo "IMAGE_TAG_BASE_NAME=$IMAGE_NAME-dev" >> $GITHUB_ENV
        echo "OVERLAY_DIR=dev" >> $GITHUB_ENV
      if: ${{ github.ref_name == 'main'  }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registries: ${{ secrets.AWS_DEV_ACCOUNT_ID }}

    - name: Extract version from package.json
      id: app_version
      uses: sergeysova/jq-action@v2
      with:
        cmd: 'jq .version package.json -r'

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ env.IMAGE_TAG_BASE_NAME }}-${{ steps.app_version.outputs.value }}-${{ github.run_number }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    - name: Setup Kustomize
      uses: imranismail/setup-kustomize@v2

    - name: Update deployment descriptors with the latest build container version
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ env.IMAGE_TAG_BASE_NAME }}-${{steps.app_version.outputs.value }}-${{github.run_number}}
      run: |
        cd deploy/overlays/${{ env.OVERLAY_DIR }}
        kustomize edit set image $IMAGE_NAME=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    - name: Update ingress host name for preview environments
      run: |
        cd deploy/overlays/${{ env.OVERLAY_DIR }}
        ./ingress-hosts-patch.sh ${{ github.ref_name }}
      if: ${{ github.ref_name != 'main' }}

    - name: Update branch name in env.js file for preview environments
      run: |
        cd deploy/overlays/${{ env.OVERLAY_DIR }}
        ./env-update-branch-name.sh ${{ github.ref_name }}
      if: ${{ github.ref_name != 'main' }}

    - uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Gitops - Deployment changes workflow